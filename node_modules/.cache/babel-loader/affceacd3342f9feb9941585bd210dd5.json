{"ast":null,"code":"var _jsxFileName = \"/Users/apple/PROJECTS/Dynamic-Form/src/App.js\";\nimport React, { Component } from 'react';\nimport DynamicForm from './components/DynamicForm';\nimport './App.css';\nconst referenceProps = {\n  id: 'bmi',\n  observationName: 'BMI - Body mass index',\n  dataElements: [{\n    id: 'name',\n    displayName: 'Name',\n    type: 'textInput',\n    display: true,\n    isRequired: true\n  }, {\n    id: 'gender',\n    displayName: 'Gender',\n    type: 'select',\n    options: [{\n      id: 1,\n      name: 'Male',\n      isDefault: true,\n      sortOrder: 1\n    }, {\n      id: 2,\n      name: 'Female',\n      isDefault: false,\n      sortOrder: 0\n    }],\n    display: true,\n    isRequired: false\n  }, {\n    id: 'weight',\n    displayName: 'Weight',\n    unitOfMeasure: 'kg',\n    type: 'numberInput',\n    bounds: {\n      upperLimit: 1000\n    },\n    display: true,\n    isRequired: true\n  }, {\n    id: 'height',\n    displayName: 'Height',\n    unitOfMeasure: 'cm',\n    type: 'numberInput',\n    bounds: {\n      upperLimit: 300\n    },\n    display: true,\n    isRequired: true\n  }, {\n    id: 'bmi',\n    displayName: 'BMI',\n    unitOfMeasure: 'kg/m2',\n    type: 'numberInput',\n    bounds: {\n      upperLimit: 100\n    },\n    display: false,\n    isRequired: false\n  }]\n  /*const headCircumferenceReferenceProps = {\n    id: 'head-circumference',\n    observationName: 'Head Circumference',\n    dataElements: [\n      {\n        id: 'name',\n        displayName: 'Name',\n        type: 'textInput',\n        display: true,\n        isRequired: true\n      },\n      {\n        id: 'gender',\n        displayName: 'Gender',\n        type: 'select',\n        options: [\n          {\n            id: 1,\n            name: 'Male',\n            isDefault: true,\n            sortOrder: 1\n          },\n          {\n            id: 2,\n            name: 'Female',\n            isDefault: false,\n            sortOrder: 2\n          }\n        ],\n        display: true,\n        isRequired: false\n      },\n      {\n        id: 'head-circumference',\n        displayName: 'Head Circumference',\n        unitOfMeasure: 'cm',\n        type: 'numberInput',\n        bounds: {\n          upperLimit: 1000,\n        },\n        display: true,\n        isRequired: true\n      }\n    ]\n  }*/\n\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{\n        name: 'test',\n        gender: 1,\n        weight: 70,\n        height: 175,\n        bmi: 24.2\n      }]\n    };\n\n    this.onSubmit = model => {\n      if (model.hasOwnProperty('height')) {\n        let bmi = model.weight / (model.height * model.height) * 10000;\n        bmi = bmi.toFixed(1);\n        Object.assign(model, {\n          bmi\n        });\n      }\n\n      console.log(JSON.stringify(model));\n      this.setState({\n        data: [model, ...this.state.data]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(DynamicForm, {\n      title: referenceProps.id,\n      model: referenceProps.dataElements,\n      onSubmit: model => {\n        this.onSubmit(model);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/apple/PROJECTS/Dynamic-Form/src/App.js"],"names":["React","Component","DynamicForm","referenceProps","id","observationName","dataElements","displayName","type","display","isRequired","options","name","isDefault","sortOrder","unitOfMeasure","bounds","upperLimit","App","state","data","gender","weight","height","bmi","onSubmit","model","hasOwnProperty","toFixed","Object","assign","console","log","JSON","stringify","setState","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport DynamicForm from './components/DynamicForm';\nimport './App.css';\n\nconst referenceProps = {\n  id: 'bmi',\n  observationName: 'BMI - Body mass index',\n  dataElements: [\n    {\n      id: 'name',\n      displayName: 'Name',\n      type: 'textInput',\n      display: true,\n      isRequired: true\n    },\n    {\n      id: 'gender',\n      displayName: 'Gender',\n      type: 'select',\n      options: [\n        {\n          id: 1,\n          name: 'Male',\n          isDefault: true,\n          sortOrder: 1\n        },\n        {\n          id: 2,\n          name: 'Female',\n          isDefault: false,\n          sortOrder: 0\n        }\n      ],\n      display: true,\n      isRequired: false\n    },\n    {\n      id: 'weight',\n      displayName: 'Weight',\n      unitOfMeasure: 'kg',\n      type: 'numberInput',\n      bounds: {\n        upperLimit: 1000,\n      },\n      display: true,\n      isRequired: true\n    },\n    {\n      id: 'height',\n      displayName: 'Height',\n      unitOfMeasure: 'cm',\n      type: 'numberInput',\n      bounds: {\n        upperLimit: 300,\n      },\n      display: true,\n      isRequired: true\n    },\n    {\n      id: 'bmi',\n      displayName: 'BMI',\n      unitOfMeasure: 'kg/m2',\n      type: 'numberInput',\n      bounds: {\n        upperLimit: 100,\n      },\n      display: false,\n      isRequired: false\n    }\n  ]\n}\n\n/*const headCircumferenceReferenceProps = {\n  id: 'head-circumference',\n  observationName: 'Head Circumference',\n  dataElements: [\n    {\n      id: 'name',\n      displayName: 'Name',\n      type: 'textInput',\n      display: true,\n      isRequired: true\n    },\n    {\n      id: 'gender',\n      displayName: 'Gender',\n      type: 'select',\n      options: [\n        {\n          id: 1,\n          name: 'Male',\n          isDefault: true,\n          sortOrder: 1\n        },\n        {\n          id: 2,\n          name: 'Female',\n          isDefault: false,\n          sortOrder: 2\n        }\n      ],\n      display: true,\n      isRequired: false\n    },\n    {\n      id: 'head-circumference',\n      displayName: 'Head Circumference',\n      unitOfMeasure: 'cm',\n      type: 'numberInput',\n      bounds: {\n        upperLimit: 1000,\n      },\n      display: true,\n      isRequired: true\n    }\n  ]\n}*/\n\n\nclass App extends Component {\n  state = {\n    data: [\n      {name: 'test', gender: 1, weight: 70, height: 175, bmi: 24.2}\n    ]\n  }\n  onSubmit = (model) => {\n    if(model.hasOwnProperty('height')){\n      let bmi = model.weight/(model.height*model.height)*10000;\n      bmi = bmi.toFixed(1);\n      Object.assign(model,{bmi});\n    }\n    console.log(JSON.stringify(model));\n    this.setState({\n      data: [ model, ...this.state.data]\n    })\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <DynamicForm \n            title = {referenceProps.id}\n            model = {referenceProps.dataElements}\n            onSubmit = { (model)=>{this.onSubmit(model)}}\n        />\n      </div>\n    );\n  }\n    \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}