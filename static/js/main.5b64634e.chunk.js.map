{"version":3,"sources":["components/TextInput.js","components/Select.js","components/NumInput.js","components/DynamicForm.js","App.js","serviceWorker.js","index.js"],"names":["TextInput","_ref","id","name","required","onChange","display","react_default","a","createElement","className","key","htmlFor","type","pattern","DropdownSelect","options","defaultOption","value","map","option","NumInput","unitOfMeasure","max","min","dynamicForm","state","onSubmit","e","preventDefault","_this","props","setState","Object","defineProperty","target","renderForm","model","m","components_TextInput","displayName","isRequired","Select","filter","opt","isDefault","components_NumInput","bounds","upperLimit","_this2","this","title","React","Component","referenceProps","observationName","dataElements","sortOrder","App","data","gender","weight","height","bmi","hasOwnProperty","toFixed","assign","console","log","JSON","stringify","concat","toConsumableArray","DynamicForm_dynamicForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b64634e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TextInput = ({ id, name, required, onChange, display}) => {\n\tif( display === true){\n\t\tif(id === \"name\"){\n\t\treturn(\n\t\t\t<div className=\"form-group\">\n\t      \t\t<label className = \"form-content\" key = {id+'i'} htmlFor = {id}>\n\t        \t\t{name}\n\t      \t\t</label>\n\t      \t\t<input\n\t\t\t        className = \"form-input\"\n\t\t\t        type = \"text\"\n\t\t\t        pattern=\"(?=^.{0,40}$)^[a-zA-Z-]+\\s[a-zA-Z-]+$\"\n\t\t\t        id = {id}\n\t\t\t        name = {name}\n\t\t\t        required = {required}\n\t\t\t        onChange = {onChange}\n\t\t        />\n\t\t    </div>\n\t\t\t);\n\t\t}else{\n\t\treturn(\n\t\t\t<div className=\"form-group\">\n\t      \t\t<label className = \"form-content\">\n\t        \t\t{name}\n\t      \t\t</label>\n\t      \t\t<input\n\t\t\t        className = \"form-input\"\n\t\t\t        type = \"text\"\n\t\t\t        id = {id}\n\t\t\t        name = {name}\n\t\t\t        required = {required}\n\t\t\t        onChange = {onChange}\n\t\t        />\n\t\t    </div>\n\t\t\t);\n\t\t}\n\t}else{\n\t\treturn(<input type=\"hidden\"/>);\n\t}\n\t\n\n};\n\nexport default TextInput;","import React from \"react\";\n\nconst DropdownSelect = ({ id, name, onChange, required, options, display, defaultOption}) =>{\n\t\n\t/*let defaultObj = { ...defaultOption[0]}*/\n\t\n\tif( display === true){\n\t\treturn (\n\t\t<div className=\"form-group\">\n\t\t\t<label className = \"form-content\" key = {id+'i'} htmlFor = {id}>\n\t\t\t\t{name}\n\t\t\t</label>\n\t\t\t<select\n\t\t\t\tclassName=\"form-input\" \n\t\t\t\tid={id} \n\t\t\t\trequired = {required} \n\t\t\t\tonChange = {onChange} \n\t\t\t\t/*defaultValue = {defaultObj.name}*/\n\t\t\t>\t\n\t\t\t\t<option value = ''></option>\n\t\t\t\t{options.map(option=>{\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<option \n\t\t\t\t\t\t\tkey = {option.id} \n\t\t\t\t\t\t\tvalue = {option.name}\t\t\t\t\t\t\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option.name}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t})}\n\n\t\t\t</select>\n\t\t</div>\n\t\t);\n\t}else{\n\t\treturn(<input type=\"hidden\"/>);\n\t}\n\n};\n\nexport default DropdownSelect;","import React from \"react\";\n\nconst NumInput = ({ id, name, unitOfMeasure, required, display, max, onChange}) => {\n\tif( display === true){\n\t\treturn (\n\t\t<div className=\"form-group\">\n\t      <label className = \"form-content\" key = {id+'i'} htmlFor = {id}>\n\t        {name} ({unitOfMeasure})\n\t      </label>\n\t      <input\n\t        className = \"form-input\"\n\t        id = {id}\n\t        name = {name}\n\t        type = \"number\"\n\t        min = \"1\"\n\t        required = {required}   \n\t        max = {max}\n\t        onChange = {onChange}\n\t      />\n\t    </div>\n\t\t);\n\t}else{\n\t\treturn(<input type=\"hidden\"/>);\n\t}\n\t\n\n};\n\nexport default NumInput;","import React from 'react';\nimport TextInput from './TextInput';\nimport Select from './Select';\nimport NumInput from './NumInput';\nimport './DynamicForm.css';\n\nexport default class dynamicForm extends React.Component{\n\tstate = {};\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif(this.props.onSubmit) this.props.onSubmit(this.state);\n\t}\n\tonChange = (e)=>{\n\t\tthis.setState({\n\t\t\t[e.target.id]: e.target.value \n\t\t})\n\t}\n\trenderForm = () =>{\n\t\tlet model = this.props.model;\n\t\tlet formUI = model.map((m)=>{\n\t\t\tif(m.type === 'textInput'){\n\t\t\t\treturn (\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tkey = {m.id+'i'}\n\t\t\t\t\t\tid = {m.id}\n\t\t\t\t\t\tname = {m.displayName}\n\t\t\t\t\t\trequired = {m.isRequired}\n\t\t\t\t\t\tdisplay = {m.display}\n\t\t\t\t\t\tonChange = {this.onChange}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if(m.type === 'select'){\n\t\t\t\treturn(\n\t\t\t\t\t<Select\n\t\t\t\t\t\tkey = {m.id+'i'}\n\t\t\t\t\t\tid = {m.id}\n\t\t\t\t\t\tname = {m.displayName}\n\t\t\t\t\t\trequired = {m.isRequired}\n\t\t\t\t\t\tdisplay = {m.display}\n\t\t\t\t\t\toptions = {m.options}\n\t\t\t\t\t\tdefaultOption = {m.options.filter(opt=>opt.isDefault)}\n\t\t\t\t\t\tonChange = {this.onChange}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if(m.type === 'numberInput'){\n\t\t\t\treturn(\n\t\t\t\t\t<NumInput\n\t\t\t\t\t\tkey = {m.id+'i'}\n\t\t\t\t\t\tid = {m.id}\n\t\t\t\t\t\tname = {m.displayName}\n\t\t\t\t\t\trequired = {m.isRequired}\n\t\t\t\t\t\tdisplay = {m.display}\n\t\t\t\t\t\tunitOfMeasure = {m.unitOfMeasure}\n\t\t\t\t\t\tmax = {m.bounds.upperLimit}\n\t\t\t\t\t\tonChange = {this.onChange}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn (<div />);\n\t\t\t}\n\t\t});\n\t\treturn formUI;\n\t}\n\n\trender(){\n\t\tlet title = this.props.title || 'Dyanmic Form';\n\n\t\treturn(\n\t\t\t<div className='container'>\n\t\t\t\t<div className='main'>\n\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t<form className = 'dynamic-form' onSubmit={(e)=>{this.onSubmit(e)}}>\n\t\t\t\t\t\t{this.renderForm()}\n\t\t\t\t\t\t<div className = 'form-content'>\n\t\t\t\t\t\t\t<button type = 'submit'> Submit </button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, {Component} from 'react';\nimport DynamicForm from './components/DynamicForm';\nimport './App.css';\n\nconst referenceProps = {\n  id: 'bmi',\n  observationName: 'BMI - Body mass index',\n  dataElements: [\n    {\n      id: 'name',\n      displayName: 'Name',\n      type: 'textInput',\n      display: true,\n      isRequired: true\n    },\n    {\n      id: 'gender',\n      displayName: 'Gender',\n      type: 'select',\n      options: [\n        {\n          id: 1,\n          name: 'Male',\n          isDefault: false,\n          sortOrder: 1\n        },\n        {\n          id: 2,\n          name: 'Female',\n          isDefault: true,\n          sortOrder: 2\n        }\n      ],\n      display: true,\n      isRequired: false\n    },\n    {\n      id: 'weight',\n      displayName: 'Weight',\n      unitOfMeasure: 'kg',\n      type: 'numberInput',\n      bounds: {\n        upperLimit: 1000,\n      },\n      display: true,\n      isRequired: true\n    },\n    {\n      id: 'height',\n      displayName: 'Height',\n      unitOfMeasure: 'cm',\n      type: 'numberInput',\n      bounds: {\n        upperLimit: 300,\n      },\n      display: true,\n      isRequired: true\n    },\n    {\n      id: 'bmi',\n      displayName: 'BMI',\n      unitOfMeasure: 'kg/m2',\n      type: 'numberInput',\n      bounds: {\n        upperLimit: 100,\n      },\n      display: false,\n      isRequired: false\n    }\n  ]\n}\n\n/*const headCircumferenceReferenceProps = {\n  id: 'head-circumference',\n  observationName: 'Head Circumference',\n  dataElements: [\n    {\n      id: 'name',\n      displayName: 'Name',\n      type: 'textInput',\n      display: true,\n      isRequired: true\n    },\n    {\n      id: 'gender',\n      displayName: 'Gender',\n      type: 'select',\n      options: [\n        {\n          id: 1,\n          name: 'Male',\n          isDefault: true,\n          sortOrder: 1\n        },\n        {\n          id: 2,\n          name: 'Female',\n          isDefault: false,\n          sortOrder: 2\n        }\n      ],\n      display: true,\n      isRequired: false\n    },\n    {\n      id: 'head-circumference',\n      displayName: 'Head Circumference',\n      unitOfMeasure: 'cm',\n      type: 'numberInput',\n      bounds: {\n        upperLimit: 1000,\n      },\n      display: true,\n      isRequired: true\n    }\n  ]\n}*/\n\n\nclass App extends Component {\n  state = {\n    data: [\n      {name: 'test', gender: 1, weight: 70, height: 175, bmi: 24.2}\n    ]\n  }\n  onSubmit = (model) => {\n    if(model.hasOwnProperty('height')){\n      let bmi = model.weight/(model.height*model.height)*10000;\n      bmi = bmi.toFixed(1);\n      Object.assign(model,{bmi});\n    }\n    console.log(JSON.stringify(model));\n    this.setState({\n      data: [ model, ...this.state.data]\n    })\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <DynamicForm \n            title = {referenceProps.id}\n            model = {referenceProps.dataElements}\n            onSubmit = { (model)=>{this.onSubmit(model)}}\n        />\n      </div>\n    );\n  }\n    \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}